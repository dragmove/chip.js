/**
 * @update : 2016-11-18 13:38:2
 */
!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){module.exports=__webpack_require__(1)},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _FullSizeCanvasVideo = __webpack_require__(2);\n\nvar _FullSizeCanvasVideo2 = _interopRequireDefault(_FullSizeCanvasVideo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function ($) {\n  \"use strict\";\n\n  $(document).ready(init);\n\n  function init() {\n    // testNavi();\n    // testNaviHasTimer();\n    // testImageLoader();\n    // testFullSizeBg();\n    // testOverlay();\n    // testFullSizeVideo();\n    testFullSizeCanvasVideo();\n  }\n\n  function testFullSizeCanvasVideo() {\n    var canvasVideo = new _FullSizeCanvasVideo2.default({\n      parent: $('.canvas-video'),\n      videoClass: 'video',\n      canvasClass: 'canvas',\n\n      autoplay: true,\n      loop: true,\n      muted: false,\n\n      width: 960,\n      height: 540,\n      alignX: 'center',\n      alignY: 'center',\n\n      fps: 30,\n      videoUrl: 'http://akvod.plaync.com/RK/MOVIES/PREREGISTER3/960x540.mp4',\n      posterUrl: './img/poster.jpg',\n\n      contentMode: _FullSizeCanvasVideo2.default.ASPECT_FIT,\n\n      canplayCallback: function canplayCallback(obj) {\n        // iOS, Adr v\n        console.log('external canplayCallback() obj :', obj);\n      },\n\n      timeupdateCallback: function timeupdateCallback(obj) {// iOS, Adr v\n        //console.log('external timeupdateCallback() obj :', obj);\n      },\n\n      endedCallback: function endedCallback(obj) {\n        // iOS, Adr v\n        console.log('external endedCallback() obj :', obj);\n      },\n\n      visibilitychangeCallback: function visibilitychangeCallback(obj) {\n        console.log('extenal visibilitychangeCallback() obj :', obj);\n\n        if (obj.documentHidden) {\n          canvasVideo.pause();\n        } else {\n          canvasVideo.play();\n        }\n      }\n    });\n    canvasVideo.init();\n\n    $(window).on('resize', function (evt) {\n      console.log('main.js - resize. window.innerWidth, window.innerHeight :', window.innerWidth, window.innerHeight);\n\n      $('.canvas-video').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n\n      $('#wrapper').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }).trigger('resize');\n\n    // test btns\n    $('#btn-play').on('click', function (evt) {\n      evt.preventDefault();\n      canvasVideo.play();\n    });\n\n    $('#btn-pause').on('click', function (evt) {\n      evt.preventDefault();\n      canvasVideo.pause();\n    });\n\n    $('#btn-stop').on('click', function (evt) {\n      evt.preventDefault();\n      canvasVideo.stop();\n    });\n\n    $('#btn-seek').on('click', function (evt) {\n      evt.preventDefault();\n      canvasVideo.seek(30);\n    });\n  }\n})(jQuery); // import Navi from './component/Navi';\n// import NaviHasTimer from './component/NaviHasTimer';\n// import ImageLoader from './component/ImageLoader';\n// import FullSizeBg from './component/FullSizeBg';\n// import Overlay from './component/Overlay';\n// import FullSizeVideo from './component/FullSizeVideo';//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3JjL21haW4uanM/MTdmNiJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImluaXQiLCJ0ZXN0RnVsbFNpemVDYW52YXNWaWRlbyIsImNhbnZhc1ZpZGVvIiwicGFyZW50IiwidmlkZW9DbGFzcyIsImNhbnZhc0NsYXNzIiwiYXV0b3BsYXkiLCJsb29wIiwibXV0ZWQiLCJ3aWR0aCIsImhlaWdodCIsImFsaWduWCIsImFsaWduWSIsImZwcyIsInZpZGVvVXJsIiwicG9zdGVyVXJsIiwiY29udGVudE1vZGUiLCJBU1BFQ1RfRklUIiwiY2FucGxheUNhbGxiYWNrIiwib2JqIiwiY29uc29sZSIsImxvZyIsInRpbWV1cGRhdGVDYWxsYmFjayIsImVuZGVkQ2FsbGJhY2siLCJ2aXNpYmlsaXR5Y2hhbmdlQ2FsbGJhY2siLCJkb2N1bWVudEhpZGRlbiIsInBhdXNlIiwicGxheSIsIndpbmRvdyIsIm9uIiwiZXZ0IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwiY3NzIiwidHJpZ2dlciIsInByZXZlbnREZWZhdWx0Iiwic3RvcCIsInNlZWsiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiI7O0FBTUE7Ozs7OztBQUVDLFdBQVNBLENBQVQsRUFBWTtBQUNYOztBQUNBQSxJQUFFQyxRQUFGLEVBQVlDLEtBQVosQ0FBa0JDLElBQWxCOztBQUVBLFdBQVNBLElBQVQsR0FBZ0I7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUM7QUFDRDs7QUFFRCxXQUFTQSx1QkFBVCxHQUFtQztBQUNqQyxRQUFJQyxjQUFjLGtDQUF3QjtBQUN4Q0MsY0FBUU4sRUFBRSxlQUFGLENBRGdDO0FBRXhDTyxrQkFBWSxPQUY0QjtBQUd4Q0MsbUJBQWEsUUFIMkI7O0FBS3hDQyxnQkFBVSxJQUw4QjtBQU14Q0MsWUFBTSxJQU5rQztBQU94Q0MsYUFBTyxLQVBpQzs7QUFTeENDLGFBQU8sR0FUaUM7QUFVeENDLGNBQVEsR0FWZ0M7QUFXeENDLGNBQVEsUUFYZ0M7QUFZeENDLGNBQVEsUUFaZ0M7O0FBY3hDQyxXQUFLLEVBZG1DO0FBZXhDQyxnQkFBVSw0REFmOEI7QUFnQnhDQyxpQkFBVyxrQkFoQjZCOztBQWtCeENDLG1CQUFhLDhCQUFvQkMsVUFsQk87O0FBb0J4Q0MsdUJBQWlCLHlCQUFDQyxHQUFELEVBQVM7QUFBRTtBQUMxQkMsZ0JBQVFDLEdBQVIsQ0FBWSxrQ0FBWixFQUFnREYsR0FBaEQ7QUFDRCxPQXRCdUM7O0FBd0J4Q0csMEJBQW9CLDRCQUFDSCxHQUFELEVBQVMsQ0FBRTtBQUM3QjtBQUNELE9BMUJ1Qzs7QUE0QnhDSSxxQkFBZSx1QkFBQ0osR0FBRCxFQUFTO0FBQUU7QUFDeEJDLGdCQUFRQyxHQUFSLENBQVksZ0NBQVosRUFBOENGLEdBQTlDO0FBQ0QsT0E5QnVDOztBQWdDeENLLGdDQUEwQixrQ0FBQ0wsR0FBRCxFQUFTO0FBQ2pDQyxnQkFBUUMsR0FBUixDQUFZLDBDQUFaLEVBQXdERixHQUF4RDs7QUFFQSxZQUFHQSxJQUFJTSxjQUFQLEVBQXVCO0FBQ3JCdkIsc0JBQVl3QixLQUFaO0FBQ0QsU0FGRCxNQUVPO0FBQ0x4QixzQkFBWXlCLElBQVo7QUFDRDtBQUNGO0FBeEN1QyxLQUF4QixDQUFsQjtBQTBDQXpCLGdCQUFZRixJQUFaOztBQUVBSCxNQUFFK0IsTUFBRixFQUFVQyxFQUFWLENBQWEsUUFBYixFQUF1QixVQUFTQyxHQUFULEVBQWM7QUFDbkNWLGNBQVFDLEdBQVIsQ0FBWSwyREFBWixFQUF5RU8sT0FBT0csVUFBaEYsRUFBNEZILE9BQU9JLFdBQW5HOztBQUVBbkMsUUFBRSxlQUFGLEVBQW1Cb0MsR0FBbkIsQ0FBdUI7QUFDckJ4QixlQUFPbUIsT0FBT0csVUFETztBQUVyQnJCLGdCQUFRa0IsT0FBT0k7QUFGTSxPQUF2Qjs7QUFLQW5DLFFBQUUsVUFBRixFQUFjb0MsR0FBZCxDQUFrQjtBQUNoQnhCLGVBQU9tQixPQUFPRyxVQURFO0FBRWhCckIsZ0JBQVFrQixPQUFPSTtBQUZDLE9BQWxCO0FBSUQsS0FaRCxFQVlHRSxPQVpILENBWVcsUUFaWDs7QUFjQTtBQUNBckMsTUFBRSxXQUFGLEVBQWVnQyxFQUFmLENBQWtCLE9BQWxCLEVBQTJCLFVBQVNDLEdBQVQsRUFBYztBQUN2Q0EsVUFBSUssY0FBSjtBQUNBakMsa0JBQVl5QixJQUFaO0FBQ0QsS0FIRDs7QUFLQTlCLE1BQUUsWUFBRixFQUFnQmdDLEVBQWhCLENBQW1CLE9BQW5CLEVBQTRCLFVBQVNDLEdBQVQsRUFBYztBQUN4Q0EsVUFBSUssY0FBSjtBQUNBakMsa0JBQVl3QixLQUFaO0FBQ0QsS0FIRDs7QUFLQTdCLE1BQUUsV0FBRixFQUFlZ0MsRUFBZixDQUFrQixPQUFsQixFQUEyQixVQUFTQyxHQUFULEVBQWM7QUFDdkNBLFVBQUlLLGNBQUo7QUFDQWpDLGtCQUFZa0MsSUFBWjtBQUNELEtBSEQ7O0FBS0F2QyxNQUFFLFdBQUYsRUFBZWdDLEVBQWYsQ0FBa0IsT0FBbEIsRUFBMkIsVUFBU0MsR0FBVCxFQUFjO0FBQ3ZDQSxVQUFJSyxjQUFKO0FBQ0FqQyxrQkFBWW1DLElBQVosQ0FBaUIsRUFBakI7QUFDRCxLQUhEO0FBSUQ7QUFDRixDQTlGQSxFQThGQ0MsTUE5RkQsQ0FBRCxDLENBUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgTmF2aSBmcm9tICcuL2NvbXBvbmVudC9OYXZpJztcclxuLy8gaW1wb3J0IE5hdmlIYXNUaW1lciBmcm9tICcuL2NvbXBvbmVudC9OYXZpSGFzVGltZXInO1xyXG4vLyBpbXBvcnQgSW1hZ2VMb2FkZXIgZnJvbSAnLi9jb21wb25lbnQvSW1hZ2VMb2FkZXInO1xyXG4vLyBpbXBvcnQgRnVsbFNpemVCZyBmcm9tICcuL2NvbXBvbmVudC9GdWxsU2l6ZUJnJztcclxuLy8gaW1wb3J0IE92ZXJsYXkgZnJvbSAnLi9jb21wb25lbnQvT3ZlcmxheSc7XHJcbi8vIGltcG9ydCBGdWxsU2l6ZVZpZGVvIGZyb20gJy4vY29tcG9uZW50L0Z1bGxTaXplVmlkZW8nO1xyXG5pbXBvcnQgRnVsbFNpemVDYW52YXNWaWRlbyBmcm9tICcuL2NvbXBvbmVudC9GdWxsU2l6ZUNhbnZhc1ZpZGVvJztcclxuXHJcbihmdW5jdGlvbigkKSB7XHJcbiAgXCJ1c2Ugc3RyaWN0XCI7XHJcbiAgJChkb2N1bWVudCkucmVhZHkoaW5pdCk7XHJcblxyXG4gIGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgICAvLyB0ZXN0TmF2aSgpO1xyXG4gICAgLy8gdGVzdE5hdmlIYXNUaW1lcigpO1xyXG4gICAgLy8gdGVzdEltYWdlTG9hZGVyKCk7XHJcbiAgICAvLyB0ZXN0RnVsbFNpemVCZygpO1xyXG4gICAgLy8gdGVzdE92ZXJsYXkoKTtcclxuICAgIC8vIHRlc3RGdWxsU2l6ZVZpZGVvKCk7XHJcbiAgICB0ZXN0RnVsbFNpemVDYW52YXNWaWRlbygpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdGVzdEZ1bGxTaXplQ2FudmFzVmlkZW8oKSB7XHJcbiAgICBsZXQgY2FudmFzVmlkZW8gPSBuZXcgRnVsbFNpemVDYW52YXNWaWRlbyh7XHJcbiAgICAgIHBhcmVudDogJCgnLmNhbnZhcy12aWRlbycpLFxyXG4gICAgICB2aWRlb0NsYXNzOiAndmlkZW8nLFxyXG4gICAgICBjYW52YXNDbGFzczogJ2NhbnZhcycsXHJcblxyXG4gICAgICBhdXRvcGxheTogdHJ1ZSxcclxuICAgICAgbG9vcDogdHJ1ZSxcclxuICAgICAgbXV0ZWQ6IGZhbHNlLFxyXG5cclxuICAgICAgd2lkdGg6IDk2MCxcclxuICAgICAgaGVpZ2h0OiA1NDAsXHJcbiAgICAgIGFsaWduWDogJ2NlbnRlcicsXHJcbiAgICAgIGFsaWduWTogJ2NlbnRlcicsXHJcblxyXG4gICAgICBmcHM6IDMwLFxyXG4gICAgICB2aWRlb1VybDogJ2h0dHA6Ly9ha3ZvZC5wbGF5bmMuY29tL1JLL01PVklFUy9QUkVSRUdJU1RFUjMvOTYweDU0MC5tcDQnLFxyXG4gICAgICBwb3N0ZXJVcmw6ICcuL2ltZy9wb3N0ZXIuanBnJyxcclxuXHJcbiAgICAgIGNvbnRlbnRNb2RlOiBGdWxsU2l6ZUNhbnZhc1ZpZGVvLkFTUEVDVF9GSVQsXHJcblxyXG4gICAgICBjYW5wbGF5Q2FsbGJhY2s6IChvYmopID0+IHsgLy8gaU9TLCBBZHIgdlxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdleHRlcm5hbCBjYW5wbGF5Q2FsbGJhY2soKSBvYmogOicsIG9iaik7XHJcbiAgICAgIH0sXHJcblxyXG4gICAgICB0aW1ldXBkYXRlQ2FsbGJhY2s6IChvYmopID0+IHsgLy8gaU9TLCBBZHIgdlxyXG4gICAgICAgIC8vY29uc29sZS5sb2coJ2V4dGVybmFsIHRpbWV1cGRhdGVDYWxsYmFjaygpIG9iaiA6Jywgb2JqKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGVuZGVkQ2FsbGJhY2s6IChvYmopID0+IHsgLy8gaU9TLCBBZHIgdlxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdleHRlcm5hbCBlbmRlZENhbGxiYWNrKCkgb2JqIDonLCBvYmopO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgdmlzaWJpbGl0eWNoYW5nZUNhbGxiYWNrOiAob2JqKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2V4dGVuYWwgdmlzaWJpbGl0eWNoYW5nZUNhbGxiYWNrKCkgb2JqIDonLCBvYmopO1xyXG5cclxuICAgICAgICBpZihvYmouZG9jdW1lbnRIaWRkZW4pIHtcclxuICAgICAgICAgIGNhbnZhc1ZpZGVvLnBhdXNlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNhbnZhc1ZpZGVvLnBsYXkoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgY2FudmFzVmlkZW8uaW5pdCgpO1xyXG5cclxuICAgICQod2luZG93KS5vbigncmVzaXplJywgZnVuY3Rpb24oZXZ0KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdtYWluLmpzIC0gcmVzaXplLiB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0IDonLCB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcclxuXHJcbiAgICAgICQoJy5jYW52YXMtdmlkZW8nKS5jc3Moe1xyXG4gICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcclxuICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgICQoJyN3cmFwcGVyJykuY3NzKHtcclxuICAgICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsXHJcbiAgICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHRcclxuICAgICAgfSk7XHJcbiAgICB9KS50cmlnZ2VyKCdyZXNpemUnKTtcclxuXHJcbiAgICAvLyB0ZXN0IGJ0bnNcclxuICAgICQoJyNidG4tcGxheScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgY2FudmFzVmlkZW8ucGxheSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnI2J0bi1wYXVzZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgY2FudmFzVmlkZW8ucGF1c2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoJyNidG4tc3RvcCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgY2FudmFzVmlkZW8uc3RvcCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnI2J0bi1zZWVrJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZ0KSB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBjYW52YXNWaWRlby5zZWVrKDMwKTtcclxuICAgIH0pO1xyXG4gIH1cclxufShqUXVlcnkpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvc3JjL21haW4uanMiXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FullSizeCanvasVideo = function () {\n  function FullSizeCanvasVideo(options) {\n    _classCallCheck(this, FullSizeCanvasVideo);\n\n    var _ = this;\n\n    _.option = {\n      parent: null,\n      videoClass: 'video',\n      canvasClass: 'canvas',\n      width: 320,\n      height: 240,\n      alignX: 'center',\n      alignY: 'center',\n\n      fps: 60,\n      videoUrl: '',\n      posterUrl: '',\n\n      autoplay: true,\n      loop: true,\n      muted: false,\n\n      contentMode: FullSizeCanvasVideo.ASPECT_FILL, // FullSizeCanvasVideo.ASPECT_FILL, FullSizeCanvasVideo.ASPECT_FIT, FullSizeCanvasVideo.WIDTH_FIT\n\n      canplayCallback: null,\n      timeupdateCallback: null,\n      endedCallback: null,\n\n      visibilitychangeCallback: null\n    };\n    $.extend(_.option, options);\n\n    _.parent = _.option.parent;\n\n    if (_.parent.length <= 0) {\n      throw new Error('FullSizeCanvasVideo Class require options have parent.');\n      return;\n    }\n\n    _.$video = null;\n    _.$canvas = null;\n\n    _.video = null;\n    _.canvas = null;\n    _.ctx = null;\n\n    _.isPlaying = false;\n    _.lastRenderTime = 0;\n    _.animationFrame = null;\n\n    _.getVideoSize = _.getVideoContentModeFunc(_.option.contentMode);\n    _.$proxyResize = $.proxy(_.resize, _);\n  }\n\n  _createClass(FullSizeCanvasVideo, [{\n    key: 'init',\n    value: function init(obj) {\n      this.setInstance();\n      this.setCallbacks();\n    }\n  }, {\n    key: 'setInstance',\n    value: function setInstance() {\n      var _ = this,\n          opt = _.option;\n\n      _.$video = $(_.getVideoTpl()).css({ position: 'absolute' });\n      _.$canvas = $(_.getCanvasTpl()).css({ position: 'absolute' });\n      _.parent.append(_.$video);\n      _.parent.append(_.$canvas);\n\n      _.video = _.$video.get(0);\n      _.canvas = _.$canvas.get(0);\n      _.ctx = this.canvas.getContext('2d');\n\n      if (opt.loop === true) _.video.setAttribute('loop', '');\n      if (opt.muted === true) _.video.setAttribute('muted', '');\n      if (opt.autoplay === true) _.video.setAttribute('autoplay', ''); // iOS video node already has \"autoplay\" attribute\n\n      var size = _.getVideoSize();\n      _.setVideoSize(size.width, size.height);\n      _.setCanvasSize(size.width, size.height);\n      _.setWrapAlign(opt.alignX, opt.alignY, size);\n\n      if (_.isIOS()) {\n        _.$video.hide();\n\n        _.play();\n        if (!_.option.autoplay) _.pause();\n      } else {\n        this.$canvas.hide();\n\n        _.$video.on('click', function (evt) {\n          _.play();\n        });\n      }\n\n      $(window).on('resize', _.$proxyResize);\n      _.resize();\n    }\n  }, {\n    key: 'setCallbacks',\n    value: function setCallbacks() {\n      var _ = this,\n          opt = _.option,\n          isVideoHasOnended = _.video.hasOwnProperty('onended');\n\n      if (_.isIOS()) {\n        _.$video.on('canplay', function (evt) {\n          _.drawVideoToCanvas();\n          if (opt.canplayCallback) {\n            opt.canplayCallback.call(null, {\n              event: evt,\n              video: _.video\n            });\n          }\n        });\n\n        _.$video.on('timeupdate', function (evt) {\n          _.drawVideoToCanvas();\n\n          if (opt.timeupdateCallback) {\n            opt.timeupdateCallback.call(null, {\n              event: evt,\n              video: _.video,\n              currentTime: _.video.currentTime,\n              duration: _.video.duration\n            });\n          }\n        });\n      } else {\n        _.$video.on('canplay', function (evt) {\n          if (opt.canplayCallback) {\n            opt.canplayCallback.call(null, {\n              event: evt,\n              video: _.video\n            });\n          }\n        });\n\n        if (opt.timeupdateCallback || !isVideoHasOnended && opt.endedCallback) {\n          _.$video.on('timeupdate', function (evt) {\n            if (opt.timeupdateCallback) {\n              opt.timeupdateCallback.call(null, {\n                event: evt,\n                video: _.video,\n                currentTime: _.video.currentTime,\n                duration: _.video.duration\n              });\n            }\n\n            if (opt.endedCallback && _.video.currentTime >= _.video.duration) {\n              if (opt.loop === true) return;\n\n              _.isPlaying = false;\n\n              opt.endedCallback.call(null, {\n                event: evt,\n                video: _.video,\n                currentTime: _.video.currentTime,\n                duration: _.video.duration\n              });\n            }\n          });\n        }\n\n        if (isVideoHasOnended && opt.endedCallback) {\n          // TODO - no browser support 'ended' event now. 2016.11.15\n          $(video).on('ended', function (evt) {\n            _.isPlaying = false;\n\n            opt.endedCallback.call(null, {\n              event: evt,\n              video: _.video,\n              currentTime: _.video.currentTime,\n              duration: _.video.duration\n            });\n          });\n        }\n      }\n\n      if (opt.visibilitychangeCallback) {\n        (function () {\n          var hidden = void 0,\n              visibilityState = void 0,\n              visibilityChange = void 0;\n\n          if (typeof document.hidden !== 'undefined') {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = 'hidden';\n            visibilityState = 'visibilityState';\n            visibilityChange = 'visibilitychange';\n          } else if (typeof document.webkitHidden !== 'undefined') {\n            hidden = 'webkitHidden';\n            visibilityState = 'webkitVisibilityState';\n            visibilityChange = 'webkitvisibilitychange';\n          } else if (typeof document.mozHidden !== 'undefined') {\n            hidden = 'mozHidden';\n            visibilityState = 'mozVisibilityState';\n            visibilityChange = 'mozvisibilitychange';\n          } else if (typeof document.msHidden !== 'undefined') {\n            hidden = 'msHidden';\n            visibilityState = 'msVisibilityState';\n            visibilityChange = 'msvisibilitychange';\n          } else if (typeof document.oHidden !== 'undefined') {\n            hidden = 'oHidden';\n            visibilityState = 'oVisibilityState';\n            visibilityChange = 'ovisibilitychange';\n          }\n\n          $(document).on(visibilityChange, function (evt) {\n            opt.visibilitychangeCallback.call(null, {\n              event: evt,\n              video: _.video,\n              documentHidden: document[hidden],\n              documentVisibilityState: document[visibilityState] // visible, hidden, prerender, unloaded\n            });\n          });\n        })();\n      }\n    }\n  }, {\n    key: 'setWrapAlign',\n    value: function setWrapAlign(alignX, alignY, modifiedSize) {\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          left = 0,\n          top = 0;\n\n      switch (alignX) {\n        case 'left':\n          left = 0;\n          break;\n\n        case 'center':\n          left = Math.round((winWidth - modifiedSize.width) / 2);\n          break;\n\n        case 'right':\n          left = Math.round(winWidth - modifiedSize.width);\n          break;\n      }\n\n      switch (alignY) {\n        case 'top':\n          top = 0;\n          break;\n\n        case 'center':\n          top = Math.round((winHeight - modifiedSize.height) / 2);\n          break;\n\n        case 'bottom':\n          top = Math.round(winHeight - modifiedSize.height);\n          break;\n      }\n\n      this.setVideoPosition({ left: left, top: top });\n      this.setCanvasPosition({ left: left, top: top });\n    }\n  }, {\n    key: 'setVideoPosition',\n    value: function setVideoPosition(cssObj) {\n      this.$video.css(cssObj);\n    }\n  }, {\n    key: 'setCanvasPosition',\n    value: function setCanvasPosition(cssObj) {\n      this.$canvas.css(cssObj);\n    }\n  }, {\n    key: 'setVideoSize',\n    value: function setVideoSize(width, height) {\n      this.$video.width(width);\n      this.$video.height(height);\n    }\n  }, {\n    key: 'setCanvasSize',\n    value: function setCanvasSize(width, height) {\n      var _ = this;\n\n      if (_.isIOS()) {\n        _.ctx.canvas.width = width;\n        _.ctx.canvas.height = height;\n        _.$canvas.attr({ width: width, height: height });\n      }\n    }\n  }, {\n    key: 'drawVideoToCanvas',\n    value: function drawVideoToCanvas() {\n      var _ = this;\n      _.ctx.drawImage(_.video, 0, 0, _.$video.width(), _.$video.height());\n    }\n  }, {\n    key: 'loopAnimationFrameIOS',\n    value: function loopAnimationFrameIOS() {\n      var _ = this,\n          opt = _.option;\n\n      var now = Date.now(),\n          elapsedTime = (now - _.lastRenderTime) / 1000;\n\n      if (elapsedTime >= 1 / _.option.fps) {\n        _.video.currentTime = _.video.currentTime + elapsedTime;\n        _.lastRenderTime = now;\n      }\n\n      if (_.video.currentTime >= _.video.duration) {\n        _.isPlaying = false;\n\n        if (opt.loop === true) {\n          _.seek(0);\n          _.play();\n        } else {\n          opt.endedCallback.call(null, {\n            event: null,\n            video: _.video,\n            currentTime: _.video.currentTime,\n            duration: _.video.duration\n          });\n\n          _.stop();\n        }\n      }\n\n      if (_.isPlaying) {\n        _.animationFrame = requestAnimationFrame(function () {\n          _.loopAnimationFrameIOS();\n        });\n      } else {\n        cancelAnimationFrame(_.animationFrame);\n        _.animationFrame = null;\n      }\n    }\n  }, {\n    key: 'resize',\n    value: function resize(evt) {\n      var _ = this,\n          size = _.getVideoSize();\n\n      _.setVideoSize(size.width, size.height);\n      _.setCanvasSize(size.width, size.height);\n      _.setWrapAlign(_.option.alignX, _.option.alignY, size);\n\n      if (_.isIOS()) _.drawVideoToCanvas();\n    }\n  }, {\n    key: 'getVideoTpl',\n    value: function getVideoTpl() {\n      var _ = this,\n          opt = _.option;\n\n      var videoSourceTpl = '',\n          ext = opt.videoUrl.split('.').pop().toLowerCase();\n      videoSourceTpl += '<source src=\"' + opt.videoUrl + '\" type=\"video/' + ext + '\"></source>';\n\n      var tpl = '<video class=\"' + opt.videoClass + '\" poster=\"' + opt.posterUrl + '\">' + videoSourceTpl + '</video>';\n      if (_.isIOS()) {\n        tpl = '<video class=\"' + opt.videoClass + '\" poster=\"' + opt.posterUrl + '\" autoplay>' + videoSourceTpl + '</video>';\n      }\n\n      return tpl;\n    }\n  }, {\n    key: 'getCanvasTpl',\n    value: function getCanvasTpl() {\n      return '<canvas class=\"' + this.option.canvasClass + '\"></canvas>';\n    }\n  }, {\n    key: 'getVideoSizeAspectFill',\n    value: function getVideoSizeAspectFill() {\n      var _ = this,\n          opt = _.option;\n\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          modifiedSizeW = winWidth,\n          modifiedSizeH = Math.ceil(winWidth / opt.width * opt.height);\n\n      if (modifiedSizeH < winHeight) {\n        modifiedSizeW = Math.ceil(winHeight / opt.height * opt.width);\n        modifiedSizeH = winHeight;\n      }\n\n      return {\n        width: modifiedSizeW,\n        height: modifiedSizeH\n      };\n    }\n  }, {\n    key: 'getVideoSizeAspectFit',\n    value: function getVideoSizeAspectFit() {\n      var _ = this,\n          opt = _.option;\n\n      var ratio = Math.min(window.innerWidth / opt.width, window.innerHeight / opt.height);\n      var modifiedSizeW = Math.ceil(opt.width * ratio),\n          modifiedSizeH = Math.ceil(opt.height * ratio);\n\n      return {\n        width: modifiedSizeW,\n        height: modifiedSizeH\n      };\n    }\n  }, {\n    key: 'getVideoSizeWidthFit',\n    value: function getVideoSizeWidthFit() {\n      var _ = this,\n          opt = _.option;\n\n      var winWidth = window.innerWidth,\n          modifiedSizeW = winWidth,\n          modifiedSizeH = Math.ceil(winWidth / opt.width * opt.height);\n\n      return {\n        width: modifiedSizeW,\n        height: modifiedSizeH\n      };\n    }\n  }, {\n    key: 'getVideoContentModeFunc',\n    value: function getVideoContentModeFunc(contentMode) {\n      var func = null;\n\n      switch (contentMode) {\n        case FullSizeCanvasVideo.ASPECT_FILL:\n          func = this.getVideoSizeAspectFill;\n          break;\n\n        case FullSizeCanvasVideo.ASPECT_FIT:\n          func = this.getVideoSizeAspectFit;\n          break;\n\n        case FullSizeCanvasVideo.WIDTH_FIT:\n          func = this.getVideoSizeWidthFit;\n          break;\n      }\n\n      return func;\n    }\n  }, {\n    key: 'isIOS',\n    value: function isIOS() {\n      return (/iPad|iPhone|iPod/.test(navigator.platform)\n      );\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.lastRenderTime = Date.now();\n        _.isPlaying = true;\n        _.loopAnimationFrameIOS();\n      } else {\n        _.isPlaying = true;\n        _.video.play();\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.isPlaying = false;\n      } else {\n        _.isPlaying = false;\n        _.video.pause();\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.pause();\n        _.seek(0);\n      } else {\n        _.video.pause();\n        _.video.currentTime = 0;\n      }\n    }\n  }, {\n    key: 'seek',\n    value: function seek(second) {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.video.currentTime = second;\n      } else {\n        _.video.currentTime = second;\n      }\n    }\n  }]);\n\n  return FullSizeCanvasVideo;\n}();\n\nFullSizeCanvasVideo.ASPECT_FILL = 'ASPECT_FILL';\nFullSizeCanvasVideo.ASPECT_FIT = 'ASPECT_FIT';\nFullSizeCanvasVideo.WIDTH_FIT = 'WIDTH_FIT';\n\nexports.default = FullSizeCanvasVideo;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
}]);