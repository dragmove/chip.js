/**
 * @update : 2016-11-11 16:22:39
 */
!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){module.exports=__webpack_require__(1)},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _FullSizeCanvasVideo = __webpack_require__(2);\n\nvar _FullSizeCanvasVideo2 = _interopRequireDefault(_FullSizeCanvasVideo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function ($) {\n  \"use strict\";\n\n  $(document).ready(init);\n\n  function init() {\n    // testNavi();\n    // testNaviHasTimer();\n    // testImageLoader();\n    // testFullSizeBg();\n    // testOverlay();\n    // testFullSizeVideo();\n    testFullSizeCanvasVideo();\n  }\n\n  function testFullSizeCanvasVideo() {\n    var bgMovie = new _FullSizeCanvasVideo2.default({\n      parent: $('.canvas-video'),\n      videoClass: 'video',\n      canvasClass: 'canvas',\n\n      autoplay: true,\n      loop: true,\n      muted: false,\n\n      width: 1920,\n      height: 1080,\n      alignX: 'center',\n      alignY: 'center',\n\n      fps: 30, // TODO\n      videoUrl: 'http://akvod.plaync.com/RK/MOVIES/PREREGISTER3/960x540.mp4',\n      posterUrl: './img/poster.jpg',\n\n      canplayCallback: function canplayCallback(obj) {\n        // iOS, Adr v\n        console.log('external canplayCallback() obj :', obj);\n      },\n\n      timeupdateCallback: function timeupdateCallback(obj) {// iOS, Adr v\n        //console.log('external timeupdateCallback() obj :', obj);\n      },\n\n      endedCallback: function endedCallback(obj) {\n        // iOS, Adr v\n        console.log('external endedCallback() obj :', obj);\n      },\n\n      visibilitychangeCallback: function visibilitychangeCallback(obj) {\n        console.log('extenal visibilitychangeCallback() obj :', obj);\n\n        if (obj.documentHidden) {\n          bgMovie.pause();\n        } else {\n          bgMovie.play();\n        }\n      }\n    });\n    bgMovie.init();\n\n    $(window).on('resize', function (evt) {\n      console.log('main.js - resize. window.innerWidth, window.innerHeight :', window.innerWidth, window.innerHeight);\n\n      $('.canvas-video').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n\n      $('#wrapper').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }).trigger('resize');\n\n    // test btns\n    $('#btn-play').on('click', function (evt) {\n      evt.preventDefault();\n      bgMovie.play();\n    });\n\n    $('#btn-pause').on('click', function (evt) {\n      evt.preventDefault();\n      bgMovie.pause();\n    });\n\n    $('#btn-stop').on('click', function (evt) {\n      evt.preventDefault();\n      bgMovie.stop();\n    });\n\n    $('#btn-seek').on('click', function (evt) {\n      evt.preventDefault();\n      bgMovie.seek(30);\n    });\n  }\n})(jQuery); // import Navi from './component/Navi';\n// import NaviHasTimer from './component/NaviHasTimer';\n// import ImageLoader from './component/ImageLoader';\n// import FullSizeBg from './component/FullSizeBg';\n// import Overlay from './component/Overlay';\n// import FullSizeVideo from './component/FullSizeVideo';//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3JjL21haW4uanM/MTdmNiJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImluaXQiLCJ0ZXN0RnVsbFNpemVDYW52YXNWaWRlbyIsImJnTW92aWUiLCJwYXJlbnQiLCJ2aWRlb0NsYXNzIiwiY2FudmFzQ2xhc3MiLCJhdXRvcGxheSIsImxvb3AiLCJtdXRlZCIsIndpZHRoIiwiaGVpZ2h0IiwiYWxpZ25YIiwiYWxpZ25ZIiwiZnBzIiwidmlkZW9VcmwiLCJwb3N0ZXJVcmwiLCJjYW5wbGF5Q2FsbGJhY2siLCJvYmoiLCJjb25zb2xlIiwibG9nIiwidGltZXVwZGF0ZUNhbGxiYWNrIiwiZW5kZWRDYWxsYmFjayIsInZpc2liaWxpdHljaGFuZ2VDYWxsYmFjayIsImRvY3VtZW50SGlkZGVuIiwicGF1c2UiLCJwbGF5Iiwid2luZG93Iiwib24iLCJldnQiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJjc3MiLCJ0cmlnZ2VyIiwicHJldmVudERlZmF1bHQiLCJzdG9wIiwic2VlayIsImpRdWVyeSJdLCJtYXBwaW5ncyI6Ijs7QUFNQTs7Ozs7O0FBRUMsV0FBU0EsQ0FBVCxFQUFZO0FBQ1g7O0FBQ0FBLElBQUVDLFFBQUYsRUFBWUMsS0FBWixDQUFrQkMsSUFBbEI7O0FBRUEsV0FBU0EsSUFBVCxHQUFnQjtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQztBQUNEOztBQUVELFdBQVNBLHVCQUFULEdBQW1DO0FBQ2pDLFFBQUlDLFVBQVUsa0NBQXdCO0FBQ3BDQyxjQUFRTixFQUFFLGVBQUYsQ0FENEI7QUFFcENPLGtCQUFZLE9BRndCO0FBR3BDQyxtQkFBYSxRQUh1Qjs7QUFLcENDLGdCQUFVLElBTDBCO0FBTXBDQyxZQUFNLElBTjhCO0FBT3BDQyxhQUFPLEtBUDZCOztBQVNwQ0MsYUFBTyxJQVQ2QjtBQVVwQ0MsY0FBUSxJQVY0QjtBQVdwQ0MsY0FBUSxRQVg0QjtBQVlwQ0MsY0FBUSxRQVo0Qjs7QUFjcENDLFdBQUssRUFkK0IsRUFjM0I7QUFDVEMsZ0JBQVUsNERBZjBCO0FBZ0JwQ0MsaUJBQVcsa0JBaEJ5Qjs7QUFrQnBDQyx1QkFBaUIseUJBQUNDLEdBQUQsRUFBUztBQUFFO0FBQzFCQyxnQkFBUUMsR0FBUixDQUFZLGtDQUFaLEVBQWdERixHQUFoRDtBQUNELE9BcEJtQzs7QUFzQnBDRywwQkFBb0IsNEJBQUNILEdBQUQsRUFBUyxDQUFFO0FBQzdCO0FBQ0QsT0F4Qm1DOztBQTBCcENJLHFCQUFlLHVCQUFDSixHQUFELEVBQVM7QUFBRTtBQUN4QkMsZ0JBQVFDLEdBQVIsQ0FBWSxnQ0FBWixFQUE4Q0YsR0FBOUM7QUFDRCxPQTVCbUM7O0FBOEJwQ0ssZ0NBQTBCLGtDQUFDTCxHQUFELEVBQVM7QUFDakNDLGdCQUFRQyxHQUFSLENBQVksMENBQVosRUFBd0RGLEdBQXhEOztBQUVBLFlBQUdBLElBQUlNLGNBQVAsRUFBdUI7QUFDckJyQixrQkFBUXNCLEtBQVI7QUFDRCxTQUZELE1BRU87QUFDTHRCLGtCQUFRdUIsSUFBUjtBQUNEO0FBQ0Y7QUF0Q21DLEtBQXhCLENBQWQ7QUF3Q0F2QixZQUFRRixJQUFSOztBQUVBSCxNQUFFNkIsTUFBRixFQUFVQyxFQUFWLENBQWEsUUFBYixFQUF1QixVQUFTQyxHQUFULEVBQWM7QUFDbkNWLGNBQVFDLEdBQVIsQ0FBWSwyREFBWixFQUF5RU8sT0FBT0csVUFBaEYsRUFBNEZILE9BQU9JLFdBQW5HOztBQUVBakMsUUFBRSxlQUFGLEVBQW1Ca0MsR0FBbkIsQ0FBdUI7QUFDckJ0QixlQUFPaUIsT0FBT0csVUFETztBQUVyQm5CLGdCQUFRZ0IsT0FBT0k7QUFGTSxPQUF2Qjs7QUFLQWpDLFFBQUUsVUFBRixFQUFja0MsR0FBZCxDQUFrQjtBQUNoQnRCLGVBQU9pQixPQUFPRyxVQURFO0FBRWhCbkIsZ0JBQVFnQixPQUFPSTtBQUZDLE9BQWxCO0FBSUQsS0FaRCxFQVlHRSxPQVpILENBWVcsUUFaWDs7QUFjQTtBQUNBbkMsTUFBRSxXQUFGLEVBQWU4QixFQUFmLENBQWtCLE9BQWxCLEVBQTJCLFVBQVNDLEdBQVQsRUFBYztBQUN2Q0EsVUFBSUssY0FBSjtBQUNBL0IsY0FBUXVCLElBQVI7QUFDRCxLQUhEOztBQUtBNUIsTUFBRSxZQUFGLEVBQWdCOEIsRUFBaEIsQ0FBbUIsT0FBbkIsRUFBNEIsVUFBU0MsR0FBVCxFQUFjO0FBQ3hDQSxVQUFJSyxjQUFKO0FBQ0EvQixjQUFRc0IsS0FBUjtBQUNELEtBSEQ7O0FBS0EzQixNQUFFLFdBQUYsRUFBZThCLEVBQWYsQ0FBa0IsT0FBbEIsRUFBMkIsVUFBU0MsR0FBVCxFQUFjO0FBQ3ZDQSxVQUFJSyxjQUFKO0FBQ0EvQixjQUFRZ0MsSUFBUjtBQUNELEtBSEQ7O0FBS0FyQyxNQUFFLFdBQUYsRUFBZThCLEVBQWYsQ0FBa0IsT0FBbEIsRUFBMkIsVUFBU0MsR0FBVCxFQUFjO0FBQ3ZDQSxVQUFJSyxjQUFKO0FBQ0EvQixjQUFRaUMsSUFBUixDQUFhLEVBQWI7QUFDRCxLQUhEO0FBSUQ7QUFDRixDQTVGQSxFQTRGQ0MsTUE1RkQsQ0FBRCxDLENBUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgTmF2aSBmcm9tICcuL2NvbXBvbmVudC9OYXZpJztcclxuLy8gaW1wb3J0IE5hdmlIYXNUaW1lciBmcm9tICcuL2NvbXBvbmVudC9OYXZpSGFzVGltZXInO1xyXG4vLyBpbXBvcnQgSW1hZ2VMb2FkZXIgZnJvbSAnLi9jb21wb25lbnQvSW1hZ2VMb2FkZXInO1xyXG4vLyBpbXBvcnQgRnVsbFNpemVCZyBmcm9tICcuL2NvbXBvbmVudC9GdWxsU2l6ZUJnJztcclxuLy8gaW1wb3J0IE92ZXJsYXkgZnJvbSAnLi9jb21wb25lbnQvT3ZlcmxheSc7XHJcbi8vIGltcG9ydCBGdWxsU2l6ZVZpZGVvIGZyb20gJy4vY29tcG9uZW50L0Z1bGxTaXplVmlkZW8nO1xyXG5pbXBvcnQgRnVsbFNpemVDYW52YXNWaWRlbyBmcm9tICcuL2NvbXBvbmVudC9GdWxsU2l6ZUNhbnZhc1ZpZGVvJztcclxuXHJcbihmdW5jdGlvbigkKSB7XHJcbiAgXCJ1c2Ugc3RyaWN0XCI7XHJcbiAgJChkb2N1bWVudCkucmVhZHkoaW5pdCk7XHJcblxyXG4gIGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgICAvLyB0ZXN0TmF2aSgpO1xyXG4gICAgLy8gdGVzdE5hdmlIYXNUaW1lcigpO1xyXG4gICAgLy8gdGVzdEltYWdlTG9hZGVyKCk7XHJcbiAgICAvLyB0ZXN0RnVsbFNpemVCZygpO1xyXG4gICAgLy8gdGVzdE92ZXJsYXkoKTtcclxuICAgIC8vIHRlc3RGdWxsU2l6ZVZpZGVvKCk7XHJcbiAgICB0ZXN0RnVsbFNpemVDYW52YXNWaWRlbygpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdGVzdEZ1bGxTaXplQ2FudmFzVmlkZW8oKSB7XHJcbiAgICBsZXQgYmdNb3ZpZSA9IG5ldyBGdWxsU2l6ZUNhbnZhc1ZpZGVvKHtcclxuICAgICAgcGFyZW50OiAkKCcuY2FudmFzLXZpZGVvJyksXHJcbiAgICAgIHZpZGVvQ2xhc3M6ICd2aWRlbycsXHJcbiAgICAgIGNhbnZhc0NsYXNzOiAnY2FudmFzJyxcclxuXHJcbiAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICBsb29wOiB0cnVlLFxyXG4gICAgICBtdXRlZDogZmFsc2UsXHJcblxyXG4gICAgICB3aWR0aDogMTkyMCxcclxuICAgICAgaGVpZ2h0OiAxMDgwLFxyXG4gICAgICBhbGlnblg6ICdjZW50ZXInLFxyXG4gICAgICBhbGlnblk6ICdjZW50ZXInLFxyXG5cclxuICAgICAgZnBzOiAzMCwgLy8gVE9ET1xyXG4gICAgICB2aWRlb1VybDogJ2h0dHA6Ly9ha3ZvZC5wbGF5bmMuY29tL1JLL01PVklFUy9QUkVSRUdJU1RFUjMvOTYweDU0MC5tcDQnLFxyXG4gICAgICBwb3N0ZXJVcmw6ICcuL2ltZy9wb3N0ZXIuanBnJyxcclxuXHJcbiAgICAgIGNhbnBsYXlDYWxsYmFjazogKG9iaikgPT4geyAvLyBpT1MsIEFkciB2XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2V4dGVybmFsIGNhbnBsYXlDYWxsYmFjaygpIG9iaiA6Jywgb2JqKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIHRpbWV1cGRhdGVDYWxsYmFjazogKG9iaikgPT4geyAvLyBpT1MsIEFkciB2XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZygnZXh0ZXJuYWwgdGltZXVwZGF0ZUNhbGxiYWNrKCkgb2JqIDonLCBvYmopO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgZW5kZWRDYWxsYmFjazogKG9iaikgPT4geyAvLyBpT1MsIEFkciB2XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2V4dGVybmFsIGVuZGVkQ2FsbGJhY2soKSBvYmogOicsIG9iaik7XHJcbiAgICAgIH0sXHJcblxyXG4gICAgICB2aXNpYmlsaXR5Y2hhbmdlQ2FsbGJhY2s6IChvYmopID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnZXh0ZW5hbCB2aXNpYmlsaXR5Y2hhbmdlQ2FsbGJhY2soKSBvYmogOicsIG9iaik7XHJcblxyXG4gICAgICAgIGlmKG9iai5kb2N1bWVudEhpZGRlbikge1xyXG4gICAgICAgICAgYmdNb3ZpZS5wYXVzZSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBiZ01vdmllLnBsYXkoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgYmdNb3ZpZS5pbml0KCk7XHJcblxyXG4gICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCBmdW5jdGlvbihldnQpIHtcclxuICAgICAgY29uc29sZS5sb2coJ21haW4uanMgLSByZXNpemUuIHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQgOicsIHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xyXG5cclxuICAgICAgJCgnLmNhbnZhcy12aWRlbycpLmNzcyh7XHJcbiAgICAgICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLFxyXG4gICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgJCgnI3dyYXBwZXInKS5jc3Moe1xyXG4gICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcclxuICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodFxyXG4gICAgICB9KTtcclxuICAgIH0pLnRyaWdnZXIoJ3Jlc2l6ZScpO1xyXG5cclxuICAgIC8vIHRlc3QgYnRuc1xyXG4gICAgJCgnI2J0bi1wbGF5Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZ0KSB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBiZ01vdmllLnBsYXkoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoJyNidG4tcGF1c2UnKS5vbignY2xpY2snLCBmdW5jdGlvbihldnQpIHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGJnTW92aWUucGF1c2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoJyNidG4tc3RvcCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2dCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgYmdNb3ZpZS5zdG9wKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKCcjYnRuLXNlZWsnKS5vbignY2xpY2snLCBmdW5jdGlvbihldnQpIHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGJnTW92aWUuc2VlaygzMCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn0oalF1ZXJ5KSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL3NyYy9tYWluLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FullSizeCanvasVideo = function () {\n  function FullSizeCanvasVideo(options) {\n    _classCallCheck(this, FullSizeCanvasVideo);\n\n    var _ = this;\n\n    _.option = {\n      parent: null,\n      videoClass: 'video',\n      canvasClass: 'canvas',\n      width: 320,\n      height: 240,\n      alignX: 'center',\n      alignY: 'center',\n\n      fps: 30, // TODO\n      videoUrl: '',\n      posterUrl: '',\n\n      autoplay: true,\n      loop: true,\n      muted: false,\n\n      canplayCallback: null,\n      timeupdateCallback: null,\n      endedCallback: null,\n\n      visibilitychangeCallback: null\n    };\n    Object.assign(_.option, options);\n\n    _.parent = _.option.parent;\n\n    if (_.parent.length <= 0) {\n      throw new Error('FullSizeCanvasVideo Class require options have parent.');\n      return;\n    }\n\n    _.$video = null;\n    _.$canvas = null;\n\n    _.video = null;\n    _.canvas = null;\n    _.ctx = null;\n\n    _.isPlaying = false;\n    _.lastRenderTime = 0;\n    _.animationFrame = null;\n\n    _.$proxyResize = $.proxy(_.resize, _);\n  }\n\n  _createClass(FullSizeCanvasVideo, [{\n    key: 'init',\n    value: function init(obj) {\n      this.setInstance();\n      this.setCallbacks();\n    }\n  }, {\n    key: 'setInstance',\n    value: function setInstance() {\n      var _ = this,\n          opt = _.option;\n\n      _.$video = $(_.getVideoTpl());\n      _.$canvas = $(_.getCanvasTpl());\n      _.parent.append(_.$video);\n      _.parent.append(_.$canvas);\n\n      _.video = _.$video.get(0);\n      _.canvas = _.$canvas.get(0);\n      _.ctx = this.canvas.getContext('2d');\n\n      if (opt.loop === true) _.video.setAttribute('loop', '');\n      if (opt.muted === true) _.video.setAttribute('muted', '');\n      if (opt.autoplay === true) _.video.setAttribute('autoplay', ''); // iOS video node already has \"autoplay\" attribute\n\n      var size = _.getVideoSizeAspectFill();\n      _.setVideoSize(size.width, size.height);\n      _.setCanvasSize(size.width, size.height);\n      _.setWrapAlign(opt.alignX, opt.alignY, size);\n\n      var isVideoHasOnended = _.video.hasOwnProperty('onended');\n      if (_.isIOS()) {\n        _.$video.hide();\n\n        _.play();\n        if (!_.option.autoplay) _.pause();\n      } else {\n        this.$canvas.hide();\n\n        _.$video.on('click', function (evt) {\n          _.play();\n        });\n      }\n\n      $(window).on('resize', _.$proxyResize);\n      _.resize();\n    }\n  }, {\n    key: 'setCallbacks',\n    value: function setCallbacks() {\n      var _ = this,\n          opt = _.option,\n          isVideoHasOnended = _.video.hasOwnProperty('onended');\n\n      if (_.isIOS()) {\n        _.$video.on('canplay', function (evt) {\n          _.drawVideoToCanvas();\n          if (opt.canplayCallback) {\n            opt.canplayCallback.call(null, {\n              event: evt,\n              video: _.video\n            });\n          }\n        });\n\n        _.$video.on('timeupdate', function (evt) {\n          _.drawVideoToCanvas();\n\n          if (opt.timeupdateCallback) {\n            opt.timeupdateCallback.call(null, {\n              event: evt,\n              video: _.video,\n              currentTime: _.video.currentTime,\n              duration: _.video.duration\n            });\n          }\n        });\n      } else {\n        _.$video.on('canplay', function (evt) {\n          if (opt.canplayCallback) {\n            opt.canplayCallback.call(null, {\n              event: evt,\n              video: _.video\n            });\n          }\n        });\n\n        if (opt.timeupdateCallback || !isVideoHasOnended && opt.endedCallback) {\n          _.$video.on('timeupdate', function (evt) {\n            if (opt.timeupdateCallback) {\n              opt.timeupdateCallback.call(null, {\n                event: evt,\n                video: _.video,\n                currentTime: _.video.currentTime,\n                duration: _.video.duration\n              });\n            }\n\n            if (opt.endedCallback && _.video.currentTime >= _.video.duration) {\n              if (opt.loop === true) return;\n\n              _.isPlaying = false;\n\n              opt.endedCallback.call(null, {\n                event: evt,\n                video: _.video,\n                currentTime: _.video.currentTime,\n                duration: _.video.duration\n              });\n            }\n          });\n        }\n\n        if (isVideoHasOnended && opt.endedCallback) {\n          // TODO - no browser support 'ended' event now.\n          $(video).on('ended', function (evt) {\n            _.isPlaying = false;\n\n            opt.endedCallback.call(null, {\n              event: evt,\n              video: _.video,\n              currentTime: _.video.currentTime,\n              duration: _.video.duration\n            });\n          });\n        }\n      }\n\n      if (opt.visibilitychangeCallback) {\n        (function () {\n          // todo - pc v\n          var hidden = void 0,\n              visibilityState = void 0,\n              visibilityChange = void 0;\n          if (typeof document.hidden !== 'undefined') {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = 'hidden';\n            visibilityState = 'visibilityState';\n            visibilityChange = 'visibilitychange';\n          } else if (typeof document.msHidden !== 'undefined') {\n            hidden = 'msHidden';\n            visibilityState = 'msVisibilityState';\n            visibilityChange = 'msvisibilitychange';\n          } else if (typeof document.webkitHidden !== 'undefined') {\n            hidden = 'webkitHidden';\n            visibilityState = 'webkitVisibilityState';\n            visibilityChange = 'webkitvisibilitychange';\n          }\n\n          $(document).on(visibilityChange, function (evt) {\n            console.log('visibilitychange :', evt);\n            console.log('hidden', document[hidden]);\n            console.log('visibilityState', document[visibilityState]); // visible, hidden, prerender, unloaded\n\n            opt.visibilitychangeCallback.call(null, {\n              event: evt,\n              video: _.video,\n              documentHidden: document[hidden],\n              documentVisibilityState: document[visibilityState]\n            });\n          });\n        })();\n      }\n    }\n  }, {\n    key: 'setWrapAlign',\n    value: function setWrapAlign(alignX, alignY, modifiedSize) {\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          left = 0,\n          top = 0;\n\n      switch (alignX) {\n        case 'left':\n          left = 0;\n          break;\n\n        case 'center':\n          left = Math.round((winWidth - modifiedSize.width) / 2);\n          break;\n\n        case 'right':\n          left = Math.round(winWidth - modifiedSize.width);\n          break;\n      }\n\n      switch (alignY) {\n        case 'top':\n          top = 0;\n          break;\n\n        case 'center':\n          top = Math.round((winHeight - modifiedSize.height) / 2);\n          break;\n\n        case 'bottom':\n          top = Math.round(winHeight - modifiedSize.height);\n          break;\n      }\n\n      this.setVideoPosition({ left: left, top: top });\n      this.setCanvasPosition({ left: left, top: top });\n    }\n  }, {\n    key: 'setVideoPosition',\n    value: function setVideoPosition(cssObj) {\n      this.$video.css(cssObj);\n    }\n  }, {\n    key: 'setCanvasPosition',\n    value: function setCanvasPosition(cssObj) {\n      this.$canvas.css(cssObj);\n    }\n  }, {\n    key: 'setVideoSize',\n    value: function setVideoSize(width, height) {\n      this.$video.width(width);\n      this.$video.height(height);\n    }\n  }, {\n    key: 'setCanvasSize',\n    value: function setCanvasSize(width, height) {\n      var _ = this;\n\n      if (_.isIOS()) {\n        _.ctx.canvas.width = width;\n        _.ctx.canvas.height = height;\n        _.$canvas.attr({ width: width, height: height });\n      }\n    }\n  }, {\n    key: 'drawVideoToCanvas',\n    value: function drawVideoToCanvas() {\n      var _ = this;\n      _.ctx.drawImage(_.video, 0, 0, _.$video.width(), _.$video.height());\n    }\n  }, {\n    key: 'loopAnimationFrameIOS',\n    value: function loopAnimationFrameIOS() {\n      var _ = this,\n          opt = _.option;\n\n      var now = Date.now(),\n          elapsedTime = (now - _.lastRenderTime) / 1000;\n\n      if (elapsedTime >= 1 / _.option.fps) {\n        _.video.currentTime = _.video.currentTime + elapsedTime;\n        _.lastRenderTime = now;\n      }\n\n      if (_.video.currentTime >= _.video.duration) {\n        _.isPlaying = false;\n\n        if (opt.loop === true) {\n          _.seek(0);\n          _.play();\n        } else {\n          opt.endedCallback.call(null, {\n            event: null,\n            video: _.video,\n            currentTime: _.video.currentTime,\n            duration: _.video.duration\n          });\n\n          _.stop();\n        }\n      }\n\n      if (_.isPlaying) {\n        _.animationFrame = requestAnimationFrame(function () {\n          _.loopAnimationFrameIOS();\n        });\n      } else {\n        cancelAnimationFrame(_.animationFrame);\n        _.animationFrame = null;\n      }\n    }\n  }, {\n    key: 'resize',\n    value: function resize(evt) {\n      var _ = this,\n          size = _.getVideoSizeAspectFill();\n\n      _.setVideoSize(size.width, size.height);\n      _.setCanvasSize(size.width, size.height);\n      _.setWrapAlign(_.option.alignX, _.option.alignY, size);\n\n      if (_.isIOS()) _.drawVideoToCanvas();\n    }\n  }, {\n    key: 'getVideoTpl',\n    value: function getVideoTpl() {\n      var _ = this,\n          opt = _.option;\n\n      var videoSourceTpl = '',\n          ext = opt.videoUrl.split('.').pop().toLowerCase();\n      videoSourceTpl += '<source src=\"' + opt.videoUrl + '\" type=\"video/' + ext + '\"></source>';\n\n      var tpl = '<video class=\"' + opt.videoClass + '\" poster=\"' + opt.posterUrl + '\">' + videoSourceTpl + '</video>';\n      if (_.isIOS()) {\n        tpl = '<video class=\"' + opt.videoClass + '\" poster=\"' + opt.posterUrl + '\" autoplay>' + videoSourceTpl + '</video>';\n      }\n      //let tpl = `<video class=\"${opt.videoClass}\" muted=\"true\" loop=\"true\" autoplay=\"true\" poster=\"\">${videoSourceTpl}</video>`;\n\n      return tpl;\n    }\n  }, {\n    key: 'getCanvasTpl',\n    value: function getCanvasTpl() {\n      return '<canvas class=\"' + this.option.canvasClass + '\"></canvas>';\n    }\n  }, {\n    key: 'getVideoSizeAspectFill',\n    value: function getVideoSizeAspectFill() {\n      var _ = this,\n          opt = _.option;\n\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          modifiedSizeW = winWidth,\n          modifiedSizeH = Math.ceil(winWidth / opt.width * opt.height);\n\n      if (modifiedSizeH < winHeight) {\n        modifiedSizeW = Math.ceil(winHeight / opt.height * opt.width);\n        modifiedSizeH = winHeight;\n      }\n\n      return {\n        width: modifiedSizeW,\n        height: modifiedSizeH\n      };\n    }\n  }, {\n    key: 'isIOS',\n    value: function isIOS() {\n      return (/iPad|iPhone|iPod/.test(navigator.platform)\n      );\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.lastRenderTime = Date.now();\n        _.isPlaying = true;\n        _.loopAnimationFrameIOS();\n      } else {\n        _.isPlaying = true;\n        _.video.play();\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.isPlaying = false;\n      } else {\n        _.isPlaying = false;\n        _.video.pause();\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.pause();\n        _.seek(0);\n      } else {\n        _.video.pause();\n        _.video.currentTime = 0;\n      }\n    }\n  }, {\n    key: 'seek',\n    value: function seek(second) {\n      var _ = this;\n      if (!_.video) return;\n\n      if (_.isIOS()) {\n        _.video.currentTime = second;\n      } else {\n        _.video.currentTime = second;\n      }\n    }\n  }]);\n\n  return FullSizeCanvasVideo;\n}();\n\nexports.default = FullSizeCanvasVideo;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
}]);