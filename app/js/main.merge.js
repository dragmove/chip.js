/**
 * @update : 2016-11-11 1:24:18
 */
!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){module.exports=__webpack_require__(1)},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _BgCanvasVideo = __webpack_require__(2);\n\nvar _BgCanvasVideo2 = _interopRequireDefault(_BgCanvasVideo);\n\nvar _Movie = __webpack_require__(3);\n\nvar _Movie2 = _interopRequireDefault(_Movie);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import Navi from './component/Navi';\n// import NaviHasTimer from './component/NaviHasTimer';\n// import ImageLoader from './component/ImageLoader';\n// import FullSizeBg from './component/FullSizeBg';\n// import Overlay from './component/Overlay';\n// import FullSizeVideo from './component/FullSizeVideo';\n(function ($) {\n  \"use strict\";\n\n  $(document).ready(init);\n\n  function init() {\n    // testNavi();\n    // testNaviHasTimer();\n    // testImageLoader();\n    // testFullSizeBg();\n    // testOverlay();\n    // testFullSizeVideo();\n    //testBgCanvasVideo();\n\n    testMovie();\n  }\n\n  function testMovie() {\n    var backgroundMovie = new _Movie2.default({\n      parent: $('.canvas-video'), //v\n      videoClass: 'video', //v\n      canvasClass: 'canvas', //v\n\n      autoplay: true,\n      loop: true,\n      muted: false,\n\n      width: 1920, //v\n      height: 1080, //v\n      alignX: 'center', //v\n      alignY: 'center', //v\n\n      fps: 30, // TODO\n      videoUrl: 'http://akvod.plaync.com/RK/MOVIES/PREREGISTER3/960x540.mp4',\n\n      posterUrl: '', // TODO\n      posterAlt: '', // TODO\n\n      canplayCallback: null, //v\n      timeupdateCallback: null, //v\n      endedCallback: null //v\n    });\n    backgroundMovie.init();\n\n    $(window).on('resize', function (evt) {\n      console.log('main.js - resize. window.innerWidth, window.innerHeight :', window.innerWidth, window.innerHeight);\n\n      $('.canvas-video').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n\n      $('#wrapper').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }).trigger('resize');\n  }\n\n  function testBgCanvasVideo() {\n    var bgCanvasVideo = new _BgCanvasVideo2.default({\n      parent: $('.canvas-video'), //v\n      videoClass: 'video', //v\n      canvasClass: 'canvas', //v\n\n      autoplay: true,\n      loop: true,\n      muted: false,\n\n      width: 1920, //v\n      height: 1080, //v\n      alignX: 'center',\n      alignY: 'center',\n\n      fps: 30,\n      videoUrl: 'http://akvod.plaync.com/RK/MOVIES/PREREGISTER3/960x540.mp4', // 'http://vodfile.ncsoft.co.kr/ncvod/plaync/LE/CBT/motion/hero_all.mp4',\n      posterUrl: '',\n      posterAlt: '',\n\n      canplayCallback: null,\n      timeupdateCallback: null,\n      endedCallback: null\n    });\n    bgCanvasVideo.init();\n\n    $(window).on('resize', function (evt) {\n      console.log('main.js - resize. window.innerWidth, window.innerHeight :', window.innerWidth, window.innerHeight);\n\n      $('.canvas-video').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n\n      $('#wrapper').css({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }).trigger('resize');\n\n    // test btns\n    $('#btn-play').on('click', function (evt) {\n      evt.preventDefault();\n      bgCanvasVideo.play();\n    });\n\n    $('#btn-pause').on('click', function (evt) {\n      evt.preventDefault();\n      bgCanvasVideo.pause();\n    });\n\n    $('#btn-stop').on('click', function (evt) {\n      evt.preventDefault();\n      bgCanvasVideo.stop();\n    });\n\n    $('#btn-seek').on('click', function (evt) {\n      evt.preventDefault();\n      bgCanvasVideo.seek(84);\n    });\n\n    /*\r\n    function testNavi() {\r\n      let navi = new Navi({\r\n        btns: $('.navi li a'),\r\n          mouseoverCallback: mouseoverCallback,\r\n        mouseoutCallback: mouseoutCallback,\r\n        clickCallback: clickCallback,\r\n        activateCallback: activateCallback\r\n      });\r\n      navi.init();\r\n        function mouseoverCallback(obj) {\r\n        console.log('mouseover :', obj);\r\n      }\r\n        function mouseoutCallback(obj) {\r\n        console.log('mouseout :', obj);\r\n      }\r\n        function clickCallback(obj) {\r\n        console.log('click :', obj);\r\n      }\r\n        function activateCallback(obj) {\r\n        console.log('activateCallback :', obj);\r\n          let btns = $(navi.getBtns()),\r\n          btn = $(navi.getBtn(obj.index));\r\n          btns.removeClass('on');\r\n        btn.addClass('on');\r\n      }\r\n        //get activated index\r\n      console.log( 'init navi instance. then, print \"_navi.getActivatedIndex()\" :', navi.getActivatedIndex() );\r\n        //activate 3rd btn\r\n      navi.activate(3);\r\n        //get activated index\r\n      console.log( 'after call \"navi.activate(3)\", print \"_navi.getActivatedIndex()\" :', navi.getActivatedIndex() );\r\n    }\r\n      function testNaviHasTimer() {\r\n      let navi = new NaviHasTimer({\r\n        btns: $('.navi li a'),\r\n          mouseoverCallback: mouseoverCallback,\r\n        mouseoutCallback: mouseoutCallback,\r\n        clickCallback: clickCallback,\r\n        activateCallback: activateCallback,\r\n          timerInterval: 500\r\n      });\r\n      navi.init();\r\n        function mouseoverCallback(obj) {\r\n        console.log('mouseover :', obj);\r\n      }\r\n        function mouseoutCallback(obj) {\r\n        console.log('mouseout :', obj);\r\n      }\r\n        function clickCallback(obj) {\r\n        console.log('click :', obj);\r\n      }\r\n        function activateCallback(obj) {\r\n        console.log('activateCallback :', obj);\r\n          let btns = $(navi.getBtns()),\r\n          btn = $(navi.getBtn(obj.index));\r\n          btns.removeClass('on');\r\n        btn.addClass('on');\r\n      }\r\n        //get activated index\r\n      console.log( 'init navi instance. then, print \"_navi.getActivatedIndex()\" :', navi.getActivatedIndex() );\r\n        //activate 3rd btn\r\n      navi.activate(3);\r\n        //get activated index\r\n      console.log( 'after call \"navi.activate(3)\", print \"_navi.getActivatedIndex()\" :', navi.getActivatedIndex() );\r\n    }\r\n      function testImageLoader() {\r\n      let imgLoader = new ImageLoader({\r\n        loadCompleteCallback: (obj) => {\r\n          console.log('loadComplete :', obj);\r\n          console.log('imgLoader.isFinished() :', imgLoader.isFinished());\r\n          console.log('imgLoader.getLoadedImgs() :', imgLoader.getLoadedImgs());\r\n        },\r\n        loadPerCompleteCallback: (obj) => {\r\n          console.log('loadPerComplete :', obj);\r\n          console.log('imgLoader.isFinished() :', imgLoader.isFinished());\r\n          console.log('imgLoader.getLoadedImgs() :', imgLoader.getLoadedImgs());\r\n        },\r\n        loadErrorCallback: (obj) => {\r\n          console.log('loadError :', obj)\r\n          console.log('imgLoader.isFinished() :', imgLoader.isFinished());\r\n          console.log('imgLoader.getLoadedImgs() :', imgLoader.getLoadedImgs());\r\n        }\r\n      });\r\n        imgLoader.start([\r\n        'https://images.unsplash.com/photo-1431794062232-2a99a5431c6c?dpr=2&auto=compress,format&crop=entropy&fit=crop&w=767&h=511&q=80&cs=tinysrgb',\r\n        'https://images.unsplash.com/photo-1435783099294-283725c372',\r\n        'https://images.unsplash.com/photo-1459666644539-a9755287d6b0?dpr=2&auto=compress,format&crop=entropy&fit=crop&w=767&h=463&q=80&cs=tinysrgb'\r\n      ]);\r\n    }\r\n      function testFullSizeBg() {\r\n      let fullSizeBg = new FullSizeBg({\r\n        imgWrap: $('.fullsize-bg'),\r\n        imgWidth: 4592,\r\n        imgHeight: 3064,\r\n        alignX: 'center',\r\n        alignY: 'center'\r\n      });\r\n      fullSizeBg.init();\r\n        $(window).on('resize', function(evt) {\r\n        $('#wrapper').css({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        });\r\n      }).trigger('resize');\r\n    }\r\n      function testOverlay() {\r\n      let overlay = new Overlay({\r\n        class: 'overlay',\r\n        color: '#f00',\r\n        opacity: 0.5,\r\n        appendTo: $('body')\r\n      });\r\n      overlay.init();\r\n        overlay.show();\r\n        setTimeout(function() {\r\n        overlay.setCss({\r\n          'background-color' : '#00f'\r\n        });\r\n      }, 1500);\r\n        setTimeout(function() {\r\n        overlay.hide();\r\n      }, 3000);\r\n    }\r\n      function testFullSizeVideo() {\r\n      let fullSizeVideo = new FullSizeVideo({\r\n        videoWrap: $('.fullsize-video'),\r\n        width: 320,\r\n        height: 176,\r\n        alignX: 'center',\r\n        alignY: 'center',\r\n          videoUrls: ['data/video_320x176.mp4'],\r\n        \r\n        posterUrl: 'https://images.unsplash.com/photo-1474496517593-015d8b59450d?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&s=49563d997d36faad03833ddab8d15c0a',\r\n        posterAlt: 'poster alt string',\r\n          autoplay: true,\r\n        loop: false,\r\n        muted: true,\r\n          canplayCallback: (obj) => {\r\n          console.log('canplayCallback obj :', obj);\r\n        },\r\n        timeupdateCallback: (obj) => {\r\n          console.log('timeupdateCallback obj :', obj);\r\n        },\r\n        endedCallback: (obj) => {\r\n          console.log('endedCallback obj :', obj);\r\n        }\r\n      });\r\n        fullSizeVideo.init();\r\n        setTimeout(function() {\r\n        fullSizeVideo.play();\r\n      }, 2000);\r\n        setTimeout(function() {\r\n        fullSizeVideo.stop();\r\n      }, 4000);\r\n        setTimeout(function() {\r\n        fullSizeVideo.seek(5);\r\n        fullSizeVideo.play();\r\n      }, 6000);\r\n        $(window).on('resize', function(evt) {\r\n        $('#wrapper').css({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        });\r\n      }).trigger('resize');\r\n    }\r\n    */\n  }\n})(jQuery);//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BgCanvasVideo = function () {\n  function BgCanvasVideo(options) {\n    _classCallCheck(this, BgCanvasVideo);\n\n    var _ = this;\n\n    _.option = {\n      parent: null, //v\n      videoClass: 'video', //v\n      canvasClass: 'canvas', //v\n\n      width: 320, //v\n      height: 240, //v\n      alignX: 'center',\n      alignY: 'center',\n\n      fps: 30,\n      videoUrl: '', //v\n      posterUrl: '', // TODO\n      posterAlt: '', // TODO\n\n      autoplay: false, //v\n      loop: false, //v\n      muted: false, //v\n\n      canplayCallback: null, //v\n      timeupdateCallback: null, //v\n      endedCallback: null //v\n    };\n    Object.assign(_.option, options);\n\n    _.parent = $(_.option.parent);\n\n    if (_.parent.length <= 0) {\n      throw new Error('BgCanvasVideo Class require options have parent.');\n      return;\n    }\n\n    _.video = null;\n    _.canvas = null;\n    _.ctx = null;\n\n    _.isIOS = /iPad|iPhone|iPod/i.test(navigator.platform);\n    _.isPlaying = false;\n\n    _.lastRenderTime = 0;\n    _.animationFrame = null;\n\n    _.$proxyResize = $.proxy(_.resize, _);\n  }\n\n  _createClass(BgCanvasVideo, [{\n    key: 'init',\n    value: function init(obj) {\n      this.setInstance();\n      this.setCallbacks();\n    }\n  }, {\n    key: 'setInstance',\n    value: function setInstance() {\n      var _ = this,\n          opt = _.option;\n\n      _.parent.append($(_.getVideoTpl()));\n      _.parent.append($(_.getCanvasTpl()));\n\n      _.video = $('.' + _.option.videoClass, _.parent);\n      _.canvas = $('.' + _.option.canvasClass, _.parent);\n      _.ctx = _.canvas.get(0).getContext('2d');\n\n      var video = _.video.get(0);\n      //video.load();\n\n      if (opt.loop === true) video.setAttribute('loop', '');\n      if (opt.muted === true) video.setAttribute('muted', '');\n      if (opt.autoplay === true) video.setAttribute('autoplay', '');\n\n      var size = _.getVideoSizeAspectFill();\n      _.setVideoSize(size.width, size.height);\n      _.setCanvasSize(size.width, size.height);\n      _.setWrapAlign(_.option.alignX, _.option.alignY, size);\n\n      if (_.isIOS) {\n        _.video.hide();\n        if (opt.autoplay) _.play();\n      } else {\n        _.canvas.hide();\n      }\n\n      $(window).on('resize', _.$proxyResize);\n      _.resize();\n    }\n  }, {\n    key: 'setCallbacks',\n    value: function setCallbacks() {\n      var _ = this,\n          opt = _.option,\n          video = _.video.get(0),\n          isVideoHasOnended = video.hasOwnProperty('onended');\n\n      $(video).on('canplay', function (evt) {\n        _.drawVideoToCanvas();\n\n        if (opt.canplayCallback) {\n          opt.canplayCallback.call(null, {\n            event: evt\n          });\n        }\n      });\n\n      $(video).on('timeupdate', function (evt) {\n        _.drawVideoToCanvas();\n\n        if (opt.timeupdateCallback) {\n          opt.timeupdateCallback.call(null, {\n            event: evt,\n            currentTime: video.currentTime,\n            duration: video.duration\n          });\n        }\n\n        if (!isVideoHasOnended && opt.endedCallback) {\n          if (opt.endedCallback && video.currentTime >= video.duration) {\n            opt.endedCallback.call(null, {\n              event: evt,\n              currentTime: video.currentTime,\n              duration: video.duration\n            });\n\n            if (opt.loop === true) {\n              _.seek(0);\n              _.play();\n            } else {\n              _.stop();\n            }\n          }\n        }\n      });\n\n      if (isVideoHasOnended && opt.endedCallback) {\n        $(video).on('ended', function (evt) {\n          opt.endedCallback.call(null, {\n            event: evt,\n            currentTime: video.currentTime,\n            duration: video.duration\n          });\n\n          if (opt.loop === true) {\n            _.seek(0);\n            _.play();\n          } else {\n            _.stop();\n          }\n        });\n      }\n    }\n  }, {\n    key: 'setWrapAlign',\n    value: function setWrapAlign(alignX, alignY, modifiedSize) {\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          left = 0,\n          top = 0;\n\n      switch (alignX) {\n        case 'left':\n          left = 0;\n          break;\n\n        case 'center':\n          left = Math.round((winWidth - modifiedSize.width) / 2);\n          break;\n\n        case 'right':\n          left = Math.round(winWidth - modifiedSize.width);\n          break;\n      }\n\n      switch (alignY) {\n        case 'top':\n          top = 0;\n          break;\n\n        case 'center':\n          top = Math.round((winHeight - modifiedSize.height) / 2);\n          break;\n\n        case 'bottom':\n          top = Math.round(winHeight - modifiedSize.height);\n          break;\n      }\n\n      this.setVideoPosition({ left: left, top: top });\n      this.setCanvasPosition({ left: left, top: top });\n    }\n  }, {\n    key: 'setVideoPosition',\n    value: function setVideoPosition(cssObj) {\n      this.video.css(cssObj);\n    }\n  }, {\n    key: 'setCanvasPosition',\n    value: function setCanvasPosition(cssObj) {\n      this.canvas.css(cssObj);\n    }\n  }, {\n    key: 'setVideoSize',\n    value: function setVideoSize(width, height) {\n      this.video.attr({ width: width, height: height });\n    }\n  }, {\n    key: 'setCanvasSize',\n    value: function setCanvasSize(width, height) {\n      var _ = this;\n      _.ctx.canvas.width = width;\n      _.ctx.canvas.height = height;\n      _.canvas.attr({ width: width, height: height });\n    }\n  }, {\n    key: 'resize',\n    value: function resize(evt) {\n      var _ = this,\n          size = _.getVideoSizeAspectFill();\n\n      _.setVideoSize(size.width, size.height);\n      _.setCanvasSize(size.width, size.height);\n      _.setWrapAlign(_.option.alignX, _.option.alignY, size);\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _ = this;\n      _.isPlaying = true;\n\n      if (_.isIOS) {\n        _.lastRenderTime = Date.now();\n        _.loopAnimationFrame();\n      } else {\n        if (!_.video || _.video.length <= 0) return;\n        var video = _.video.get(0);\n        video.play();\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      var _ = this;\n      _.isPlaying = false;\n\n      if (_.isIOS) {\n        window.cancelAnimationFrame(_.animationFrame);\n        _.animationFrame = null;\n      } else {\n        if (!_.video || _.video.length <= 0) return;\n        var video = _.video.get(0);\n        video.pause();\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _ = this;\n      _.isPlaying = false;\n\n      if (_.isIOS) {\n        window.cancelAnimationFrame(_.animationFrame);\n        _.animationFrame = null;\n        _.lastRenderTime = 0; // TODO - confirm\n      } else {\n        if (!_.video || _.video.length <= 0) return;\n        var video = _.video.get(0);\n        video.pause();\n        video.currentTime = 0;\n      }\n    }\n  }, {\n    key: 'seek',\n    value: function seek(second) {\n      var _ = this;\n      if (!_.video || _.video.length <= 0) return;\n\n      var video = _.video.get(0);\n      video.currentTime = second;\n\n      _.drawVideoToCanvas();\n    }\n  }, {\n    key: 'drawVideoToCanvas',\n    value: function drawVideoToCanvas() {\n      var _ = this,\n          video = _.video.get(0);\n      _.ctx.drawImage(video, 0, 0, _.video.width(), _.video.height());\n    }\n  }, {\n    key: 'loopAnimationFrame',\n    value: function loopAnimationFrame() {\n      var _ = this;\n\n      var now = Date.now();\n      var elapsedTime = (now - _.lastRenderTime) / 1000;\n\n      if (elapsedTime >= 1 / _.option.fps) {\n        _.video.currentTime = _.video.currentTime + elapsedTime;\n        _.lastRenderTime = now;\n      }\n\n      if (_.video.currentTime >= _.video.duration) {\n        _.isPlaying = false;\n\n        if (_.option.loop === true) {\n          _.video.currentTime = 0;\n          _.play();\n        }\n      }\n\n      if (_.isPlaying) {\n        _.animationFrame = window.requestAnimationFrame(function () {\n          _.loopAnimationFrame();\n        });\n      } else {\n        window.cancelAnimationFrame(_.animationFrame);\n        _.animationFrame = null;\n      }\n    }\n  }, {\n    key: 'getVideoTpl',\n    value: function getVideoTpl() {\n      var _ = this,\n          opt = _.option;\n\n      var videoSourceTpl = '',\n          ext = opt.videoUrl.split('.').pop().toLowerCase();\n      videoSourceTpl += '<source src=\"' + opt.videoUrl + '\" type=\"video/' + ext + '\"></source>';\n\n      var tpl = '<video class=\"' + opt.videoClass + '\" poster=\"' + opt.posterUrl + '\">' + videoSourceTpl + '</video>';\n      // let tpl = `<video class=\"${opt.videoClass}\" muted=\"true\" loop=\"true\" autoplay=\"true\" poster=\"\">${videoSourceTpl}</video>`;\n      return tpl;\n    }\n  }, {\n    key: 'getCanvasTpl',\n    value: function getCanvasTpl() {\n      return '<canvas class=\"' + this.option.canvasClass + '\"></canvas>';\n    }\n  }, {\n    key: 'getVideoSizeAspectFill',\n    value: function getVideoSizeAspectFill() {\n      var _ = this,\n          opt = _.option;\n\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          modifiedSizeW = winWidth,\n          modifiedSizeH = Math.ceil(winWidth / opt.width * opt.height);\n\n      if (modifiedSizeH < winHeight) {\n        modifiedSizeW = Math.ceil(winHeight / opt.height * opt.width);\n        modifiedSizeH = winHeight;\n      }\n\n      return {\n        width: modifiedSizeW,\n        height: modifiedSizeH\n      };\n    }\n  }]);\n\n  return BgCanvasVideo;\n}();\n\nexports.default = BgCanvasVideo;\n\n/*\r\n class Movie{\r\n constructor( $parent, options ) {\r\n\r\n this.$parent = $parent;\r\n\r\n this.options = {\r\n   framesPerSecond: 25,\r\n   hideVideo: true,\r\n   autoplay: true,\r\n   loop: true,\r\n   fixedTop: false,\r\n   movieWidth: 960,\r\n   movieHeight: 540,\r\n   movieUrl : '',\r\n   poster: ''\r\n }\r\n\r\n jQuery.extend( true, this.options, options );\r\n\r\n this.videoNode = jQuery( this.tmplVideo() );\r\n this.canvasNode = jQuery( this.tmplCanvas() );\r\n\r\n this.$parent.append( this.videoNode );\r\n this.video = this.videoNode.get( 0 );\r\n\r\n this.$parent.append( this.canvasNode );\r\n this.canvas = this.canvasNode.get( 0 );\r\n\r\n this.ctx = this.canvas.getContext( '2d' );\r\n\r\n this.playing = false;\r\n // this.resizeTimeoutReference = false;\r\n // this.resizeTimout = 100;\r\n\r\n this.init();\r\n this.bind();\r\n\r\n if( !this.isIOS() ){\r\n this.canvasNode.hide();\r\n }\r\n }\r\n\r\n isIOS() {\r\n return /iPad|iPhone|iPod/.test( navigator.platform );\r\n }\r\n\r\n             position() {\r\n             let movieWidth = this.width;\r\n             let movieHeight = this.height;\r\n             let winWidth = jQuery( window ).width();\r\n             let winHeight = jQuery( window ).height();\r\n\r\n             let left =  -( movieWidth - winWidth ) / 2;\r\n             let top = -( movieHeight - winHeight )  / 2;\r\n\r\n             if( this.options.fixedTop ) {\r\n             top = 0;\r\n             }\r\n\r\n             if( this.isIOS() ){\r\n             this.canvasNode.css({position:'absolute', left: left, top: top});\r\n             }else{\r\n             this.videoNode.css({position:'absolute', left: left, top: top});\r\n             }\r\n             }\r\n\r\n init() {\r\n this.video.load();\r\n this.setCanvasSize();\r\n this.position();\r\n\r\n if ( this.isIOS() && this.options.hideVideo )\r\n this.videoNode.hide();\r\n }\r\n\r\n bind() {\r\n   if( this.isIOS() ){\r\n     this.video.addEventListener('timeupdate', () => {\r\n     this.drawFrame();\r\n   });\r\n\r\n   this.video.addEventListener('canplay', () => {\r\n   this.drawFrame();\r\n   });\r\n\r\n   if (this.video.readyState >= 2) {\r\n   this.drawFrame();\r\n   }\r\n   }\r\n\r\n   if ( this.isIOS() && this.options.autoplay ) {\r\n    this.play();\r\n   }\r\n\r\n // Cache canvas size on resize (doing it only once in a second)\r\n jQuery( window ).on('resize', () => {\r\n //clearTimeout( this.resizeTimeoutReference );\r\n\r\n //this.resizeTimeoutReference = setTimeout(() => {\r\n this.setCanvasSize();\r\n this.position();\r\n\r\n if( this.isIOS() ) this.drawFrame();\r\n //}, this.resizeTimout );\r\n });\r\n\r\n   jQuery( document ).bind( 'webkitvisibilitychange', function(){\r\n     if ( !window._checkVisibilityChange ) return;\r\n       if ( document[ 'webkitHidden' ] ) {\r\n         this.pause();\r\n       } else {\r\n         this.play();\r\n       }\r\n     });\r\n   }\r\n\r\n   setCanvasSize() {\r\n   let movieWidth = this.options.movieWidth;\r\n   let movieHeight = this.options.movieHeight;\r\n   let winWidth = jQuery( window ).width();\r\n   let winHeight = jQuery( window ).height();\r\n\r\n   this.height = Math.ceil( winHeight );\r\n   this.width = Math.ceil( this.height * movieWidth / movieHeight );\r\n\r\n   if( this.width < winWidth ){\r\n     this.height = Math.ceil( winHeight + ( ( winWidth - this.width ) * 9 / 16 ) );\r\n     this.width = Math.ceil( this.height * movieWidth / movieHeight );\r\n   }\r\n\r\n   if( this.isIOS() ){\r\n     this.ctx.canvas.width = this.width;\r\n     this.ctx.canvas.height = this.height;\r\n\r\n     this.canvasNode.attr('width', this.width);\r\n     this.canvasNode.attr('height', this.height);\r\n   }else{\r\n     this.videoNode.width( this.width );\r\n     this.videoNode.height( this.height );\r\n   }\r\n }\r\n\r\n play () {\r\n   if( this.isIOS() ){\r\n     this.lastTime = Date.now();\r\n     this.playing = true;\r\n     this.loop();\r\n   }else{\r\n     this.playing = true;\r\n     this.videoNode.get( 0 ).play();\r\n   }\r\n }\r\n\r\n pause() {\r\n   if( this.isIOS() ){\r\n     this.playing = false;\r\n   }else{\r\n     this.playing = false;\r\n     this.videoNode.get( 0 ).pause();\r\n   }\r\n }\r\n\r\n playPause() {\r\n   if (this.playing) {\r\n     this.pause();\r\n   } else {\r\n     this.play();\r\n   }\r\n }\r\n\r\n loop () {\r\n   let time = Date.now();\r\n   let elapsed = ( time - this.lastTime ) / 1000;\r\n\r\n   // Render\r\n   if( elapsed >= (1 / this.options.framesPerSecond ) ) {\r\n     this.video.currentTime = this.video.currentTime + elapsed;\r\n     this.lastTime = time;\r\n   }\r\n\r\n   if (this.video.currentTime >= this.video.duration) {\r\n     this.playing = false;\r\n\r\n     if (this.options.loop === true) {\r\n       this.video.currentTime = 0;\r\n       this.play();\r\n     }\r\n   }\r\n\r\n   if ( this.playing ) {\r\n      this.animationFrame = requestAnimationFrame( () => {\r\n      this.loop();\r\n     });\r\n   }else {\r\n     cancelAnimationFrame( this.animationFrame );\r\n   }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n tmplVideo () {\r\n return `<video class=\"video\" muted=\"true\" loop=\"true\" autoplay=\"true\" poster=\"${this.options.poster}\">\r\n <source src=\"${this.options.movieUrl}\" type=\"video/mp4\"></video>`;\r\n }\r\n\r\n tmplCanvas() {\r\n return '<canvas class=\"canvas\"></canvas>';\r\n }\r\n\r\n drawFrame() {\r\n this.ctx.drawImage(this.video, 0, 0, this.width, this.height);\r\n }\r\n }\r\n\r\n module.exports = Movie;\r\n *///# sourceMappingURL=data:application/json;charset=utf-8;base64,");
},function(module,exports){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Movie = function () {\n  function Movie(options) {\n    _classCallCheck(this, Movie);\n\n    var _ = this;\n\n    _.option = {\n      parent: null,\n      videoClass: 'video',\n      canvasClass: 'canvas',\n      width: 960,\n      height: 540,\n      alignX: 'center',\n      alignY: 'center',\n\n      fps: 30, // TODO\n      videoUrl: '',\n      posterUrl: '', // TODO\n      posterAlt: '', // TODO\n\n      autoplay: true,\n      loop: true,\n      muted: false,\n\n      canplayCallback: null, //v\n      timeupdateCallback: null, //v\n      endedCallback: null //v\n    };\n    Object.assign(_.option, options);\n\n    _.parent = _.option.parent;\n\n    if (_.parent.length <= 0) {\n      throw new Error('BgCanvasVideo Class require options have parent.');\n      return;\n    }\n\n    _.$video = null;\n    _.$canvas = null;\n\n    _.video = null;\n    _.canvas = null;\n    _.ctx = null;\n\n    _.playing = false;\n\n    _.lastRenderTime = 0;\n    _.animationFrame = null;\n\n    _.$proxyResize = $.proxy(_.resize, _);\n  }\n\n  _createClass(Movie, [{\n    key: 'init',\n    value: function init(obj) {\n      this.setInstance();\n    }\n  }, {\n    key: 'setInstance',\n    value: function setInstance() {\n      var _this = this;\n\n      var _ = this,\n          opt = _.option;\n\n      _.$video = $(_.getVideoTpl());\n      _.$canvas = $(_.getCanvasTpl());\n      _.parent.append(_.$video);\n      _.parent.append(_.$canvas);\n\n      _.video = _.$video.get(0);\n      _.canvas = _.$canvas.get(0);\n      _.ctx = this.canvas.getContext('2d');\n\n      if (opt.loop === true) _.video.setAttribute('loop', '');\n      if (opt.muted === true) _.video.setAttribute('muted', '');\n      if (opt.autoplay === true) _.video.setAttribute('autoplay', '');\n\n      var size = _.getVideoSizeAspectFill();\n      this.setVideoSize(size.width, size.height);\n      this.setCanvasSize(size.width, size.height);\n      this.setWrapAlign(opt.alignX, opt.alignY, size);\n\n      if (_.isIOS()) {\n        this.$video.hide();\n\n        this.video.addEventListener('timeupdate', function () {\n          _this.drawVideoToCanvas();\n        });\n\n        this.video.addEventListener('canplay', function () {\n          _this.drawVideoToCanvas();\n        });\n\n        if (this.video.readyState >= 2) {\n          this.drawVideoToCanvas();\n        }\n\n        if (this.option.autoplay) this.play();\n      } else {\n        this.$canvas.hide();\n      }\n\n      $(window).on('resize', _.$proxyResize);\n      _.resize();\n\n      $(document).on('webkitvisibilitychange', function () {\n        /*\r\n         if ( document[ 'webkitHidden' ] ) {\r\n         this.pause();\r\n         } else {\r\n         this.play();\r\n         }\r\n         */\n      });\n    }\n  }, {\n    key: 'setWrapAlign',\n    value: function setWrapAlign(alignX, alignY, modifiedSize) {\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          left = 0,\n          top = 0;\n\n      switch (alignX) {\n        case 'left':\n          left = 0;\n          break;\n\n        case 'center':\n          left = Math.round((winWidth - modifiedSize.width) / 2);\n          break;\n\n        case 'right':\n          left = Math.round(winWidth - modifiedSize.width);\n          break;\n      }\n\n      switch (alignY) {\n        case 'top':\n          top = 0;\n          break;\n\n        case 'center':\n          top = Math.round((winHeight - modifiedSize.height) / 2);\n          break;\n\n        case 'bottom':\n          top = Math.round(winHeight - modifiedSize.height);\n          break;\n      }\n\n      this.setVideoPosition({ left: left, top: top });\n      this.setCanvasPosition({ left: left, top: top });\n    }\n  }, {\n    key: 'setVideoPosition',\n    value: function setVideoPosition(cssObj) {\n      this.$video.css(cssObj);\n    }\n  }, {\n    key: 'setCanvasPosition',\n    value: function setCanvasPosition(cssObj) {\n      this.$canvas.css(cssObj);\n    }\n  }, {\n    key: 'setVideoSize',\n    value: function setVideoSize(width, height) {\n      this.$video.width(width);\n      this.$video.height(height);\n    }\n  }, {\n    key: 'setCanvasSize',\n    value: function setCanvasSize(width, height) {\n      var _ = this;\n\n      _.width = width;\n      _.height = height;\n\n      if (_.isIOS()) {\n        _.ctx.canvas.width = width;\n        _.ctx.canvas.height = height;\n        _.$canvas.attr({ width: width, height: height });\n      }\n    }\n  }, {\n    key: 'resize',\n    value: function resize(evt) {\n      var _ = this,\n          size = _.getVideoSizeAspectFill();\n\n      _.setVideoSize(size.width, size.height);\n      _.setCanvasSize(size.width, size.height);\n      _.setWrapAlign(_.option.alignX, _.option.alignY, size);\n\n      if (_.isIOS()) _.drawVideoToCanvas();\n    }\n\n    // todo\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.isIOS()) {\n        this.lastRenderTime = Date.now();\n        this.playing = true;\n        this.loopAnimationFrame();\n      } else {\n        this.playing = true;\n        this.$video.get(0).play();\n      }\n    }\n\n    // todo\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.isIOS()) {\n        this.playing = false;\n      } else {\n        this.playing = false;\n        this.$video.get(0).pause();\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      // todo\n    }\n  }, {\n    key: 'seek',\n    value: function seek(second) {\n      // todo\n    }\n  }, {\n    key: 'drawVideoToCanvas',\n    value: function drawVideoToCanvas() {\n      var _ = this;\n      _.ctx.drawImage(_.video, 0, 0, _.$video.width(), _.$video.height());\n    }\n  }, {\n    key: 'loopAnimationFrame',\n    value: function loopAnimationFrame() {\n      var _ = this;\n\n      var now = Date.now(),\n          elapsedTime = (now - _.lastRenderTime) / 1000;\n      console.log('elapsedTime :', elapsedTime);\n\n      // Render\n      if (elapsedTime >= 1 / _.option.fps) {\n        _.video.currentTime = _.video.currentTime + elapsedTime;\n        _.lastRenderTime = now;\n      }\n\n      if (_.video.currentTime >= _.video.duration) {\n        _.playing = false;\n\n        if (_.option.loop === true) {\n          _.video.currentTime = 0;\n          _.play();\n        }\n      }\n\n      if (_.playing) {\n        _.animationFrame = requestAnimationFrame(function () {\n          _.loopAnimationFrame();\n        });\n      } else {\n        cancelAnimationFrame(_.animationFrame);\n        _.animationFrame = null;\n      }\n    }\n  }, {\n    key: 'getVideoTpl',\n    value: function getVideoTpl() {\n      var _ = this,\n          opt = _.option;\n\n      var videoSourceTpl = '',\n          ext = opt.videoUrl.split('.').pop().toLowerCase();\n      videoSourceTpl += '<source src=\"' + opt.videoUrl + '\" type=\"video/' + ext + '\"></source>';\n\n      var tpl = '<video class=\"' + opt.videoClass + '\" poster=\"' + opt.posterUrl + '\">' + videoSourceTpl + '</video>';\n      //let tpl = `<video class=\"${opt.videoClass}\" muted=\"true\" loop=\"true\" autoplay=\"true\" poster=\"\">${videoSourceTpl}</video>`;\n      return tpl;\n    }\n  }, {\n    key: 'getCanvasTpl',\n    value: function getCanvasTpl() {\n      return '<canvas class=\"' + this.option.canvasClass + '\"></canvas>';\n    }\n  }, {\n    key: 'getVideoSizeAspectFill',\n    value: function getVideoSizeAspectFill() {\n      var _ = this,\n          opt = _.option;\n\n      var winWidth = window.innerWidth,\n          winHeight = window.innerHeight,\n          modifiedSizeW = winWidth,\n          modifiedSizeH = Math.ceil(winWidth / opt.width * opt.height);\n\n      if (modifiedSizeH < winHeight) {\n        modifiedSizeW = Math.ceil(winHeight / opt.height * opt.width);\n        modifiedSizeH = winHeight;\n      }\n\n      return {\n        width: modifiedSizeW,\n        height: modifiedSizeH\n      };\n    }\n  }, {\n    key: 'isIOS',\n    value: function isIOS() {\n      return (/iPad|iPhone|iPod/.test(navigator.platform)\n      );\n    }\n  }]);\n\n  return Movie;\n}();\n\nexports.default = Movie;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")}]);